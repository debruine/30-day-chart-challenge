[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"first year participating 30-day chart challenge. work PsyTeachR, almost everything bookdown, thought make book open-source PsyTeachR template.going use data simulation charts, also end resource simulate different types data.","code":""},{"path":"part-to-whole.html","id":"part-to-whole","chapter":"1 Part-to-whole","heading":"1 Part-to-whole","text":"wanting get familiar treemap plots.","code":"\nlibrary(treemap)\nlibrary(faux)\nlibrary(tidyverse)"},{"path":"part-to-whole.html","id":"simulate-data","chapter":"1 Part-to-whole","heading":"1.1 Simulate data","text":"always like start exploration simulated data. mixed design simulation functions faux.Make school 5 grades, 1-4 classes per grade, 15-35 students per class. Get random names 2010 Scottish babies.","code":"\nset.seed(8675309) # for reproducible data simulation\n\nschool <- add_random(grade = 5) %>%\n  add_random(class = sample(1:4, nrow(.), TRUE), \n             .nested_in = \"grade\") %>%\n  add_random(student = sample(15:35, nrow(.), TRUE), \n             .nested_in = \"class\") %>%\n  mutate(name = sample(size = nrow(.),\n                       x = ukbabynames::scotbabynames %>%\n                         filter(year == 2010) %>%\n                         pull(name)))\n\nhead(school)"},{"path":"part-to-whole.html","id":"basic-treemap","chapter":"1 Part-to-whole","heading":"1.2 Basic Treemap","text":"basic version OK, think can better .","code":"\nschool %>% \n  count(grade, class) %>%\n  treemap(\n    index = c(\"grade\", \"class\"), \n    vSize = \"n\"\n  )"},{"path":"part-to-whole.html","id":"adjust-labels","chapter":"1 Part-to-whole","heading":"1.3 Adjust Labels","text":"First, adjust label size alignment. adapted code book Emily Nordmann recently wrote: Applied Data Skills. fontsize.labels align.labels, added vector names help remember , names used treemap() , just order.class labels aligned bottom right close edges, give padding xmod.labels ymod.labels. also going remove transparent grey label background bg.labels = 0","code":"\nschool %>% \n  count(grade, class) %>%\n  treemap(\n    index = c(\"grade\", \"class\"), \n    vSize = \"n\", \n    title = \"\",\n    # set different label sizes for each type of label\n    fontsize.labels = c(grade = 30, class = 15), \n    # remove shaded background\n    bg.labels = 0,\n    # set different alignments for two label types\n    align.labels = list(\n      grade = c(\"left\", \"top\"), \n      class = c(\"right\", \"bottom\")\n    ),\n    xmod.labels = c(0, -.1), # nudge class labels left\n    ymod.labels = c(0, .1)   # nudge class labels up\n  )"},{"path":"part-to-whole.html","id":"colour-scheme","chapter":"1 Part-to-whole","heading":"1.4 Colour scheme","text":"like use #30DayChartChallenge theme colours plots, set . going name colours chapter represent.","code":"\ndcc_theme <- list(\n  comp = \"#4864DB\", # ~royalblue\n  dist = \"#10D4CF\", # ~darkturquoise\n  rels = \"#8DEA74\", # ~lightgreen\n  time = \"#F5C748\", # ~tan1\n  cert = \"#EA4E11\"  # ~orangered2\n)\nschool %>% \n  count(grade, class) %>%\n  treemap(\n    index = c(\"grade\", \"class\"), \n    vSize = \"n\", \n    title = \"\",\n    palette = dcc_theme,\n    fontsize.labels = c(grade = 30, class = 10), \n    bg.labels = 0,\n    align.labels = list(\n      grade = c(\"left\", \"top\"), \n      class = c(\"center\", \"center\")\n    ),\n    xmod.labels = c(0, -.1),\n    ymod.labels = c(0, .1)\n  )"},{"path":"part-to-whole.html","id":"change-text","chapter":"1 Part-to-whole","heading":"1.5 Change text","text":"Now want upgrade labels. probably easiest data using mutate(). set kind primary school grade labels use Scotland, grade P1, P2, ... class within grade gets letter suffix.Finally, make borders thicker. starting look like Mondrian!.\nFigure 1.1: Treemap plot classes nested grades (P1 P5). 2-4 classes grade 16-35 students. size box represents size class, colour box represents grade.\n","code":"\nschool2 <- school %>% \n  count(grade, class) %>%\n  mutate(grade = gsub(\"grade\", \"P\", grade)) %>%\n  group_by(grade) %>%\n  mutate(class = paste0(grade, letters[1:n()])) %>%\n  ungroup() %>%\n  mutate(class = paste0(class, \"\\nn = \", n))\nschool2 %>%\n  treemap(\n    index = c(\"grade\", \"class\"), \n    vSize = \"n\", \n    title = \"\",\n    palette = dcc_theme,\n    fontcolor.labels = \"white\",\n    fontsize.labels = c(grade = 30, class = 15), \n    bg.labels = 0,\n    align.labels = list(\n      grade = c(\"left\", \"top\"), \n      class = c(\"right\", \"bottom\")\n    ),\n    xmod.labels = c(0, -.1),\n    ymod.labels = c(0, .1),\n    border.lwds = 5, # thicker borders\n  )"},{"path":"pictogram.html","id":"pictogram","chapter":"2 Pictogram","heading":"2 Pictogram","text":"recently discovered waffle package making waffle plots. Emily refuse teach students Applied Data Skills course make pie charts, sweet alternative.","code":"\n#devtools::install_github(\"hrbrmstr/waffle\")\nlibrary(tidyverse)\nlibrary(waffle)"},{"path":"pictogram.html","id":"pictogram-data","chapter":"2 Pictogram","heading":"2.1 Pictogram data","text":"Pictograms generally used counts, pets go-example unordered categorical data (even though ferrets obviously best).found table pet ownership USA. excel file download option data, file corrupted, used datapasta copy .","code":"\n# Number of U.S. Households That Own a Pet, by Type of Animal \nus_pets <- tibble::tribble(\n               ~Pet, ~Number,\n              \"Dog\",      69,\n              \"Cat\",    45.3,\n  \"Freshwater fish\",    11.8,\n             \"Bird\",     9.9,\n     \"Small animal\",     6.2,\n          \"Reptile\",     5.7,\n            \"Horse\",     3.5,\n   \"Saltwater fish\",     2.9\n  ) %>%\n  mutate(Pet = factor(Pet, Pet))"},{"path":"pictogram.html","id":"icons","chapter":"2 Pictogram","heading":"2.2 Icons","text":"need find matching free icons fontawesome. Make sure searching v5 icons; v6 icons work result impenetrable error-message scale_label_pictogram().Yes, know used fish twice, many people owned winged dragons, reptile!","code":"\nicons <- c(\"dog\", \"cat\", \"fish-fins\", \"crow\", \"frog\", \"dragon\", \"horse\", \"fish\")\nggplot(us_pets, aes(label = Pet, values = Number)) +\n  geom_pictogram() +\n  scale_label_pictogram(values = icons)## Error in vapply(if (n > length(values)) rep(values[[1]], n) else values, : values must be length 1,\n##  but FUN(X[[8]]) result is length 0\nicons <- c(\"dog\", \"cat\", \"fish\", \"crow\", \"frog\", \"dragon\", \"horse\", \"fish\")\nggplot(us_pets, aes(label = Pet, values = Number)) +\n  geom_pictogram() +\n  scale_label_pictogram(values = icons)"},{"path":"pictogram.html","id":"colour","chapter":"2 Pictogram","heading":"2.3 Colour","text":"Now, add colour. also going make icon size little smaller.like ggplot default colours, except green fish. rather yellow. found function re-create ggplot default colour scheme.","code":"\nggplot(us_pets, aes(label = Pet, values = Number, color = Pet)) +\n  geom_pictogram(size = 6.5) +\n  scale_label_pictogram(values = icons)\nggplotColours <- function(n, h = c(0, 360) + 15){\n  h[2] <- h[2] - 360/n\n  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)\n}\npet_colours <- ggplotColours(8)\npet_colours[3] <- \"#F5C748\"\nggplot(us_pets, aes(label = Pet, values = Number, color = Pet)) +\n  geom_pictogram(size = 6.5) +\n  scale_label_pictogram(values = icons) +\n  scale_colour_manual(values = pet_colours)"},{"path":"pictogram.html","id":"clean-it-up","chapter":"2 Pictogram","heading":"2.4 Clean it up","text":"Make sure coordinates equal stretch aspect ratio icons, add theme_enhance_waffle() get rid extraneous background, add labels aid interpretation data provenance.","code":"\nplot <- ggplot(us_pets, aes(label = Pet, values = Number, color = Pet)) +\n  geom_pictogram(size = 6.5) +\n  scale_label_pictogram(values = icons) +\n  scale_colour_manual(values = pet_colours) +\n  coord_equal() +\n  theme_enhance_waffle() +\n  labs(title = \"Pet Ownership in America\",\n       subtitle = \"Each icon represents 1 million houeholds\",\n       caption = \"Data from the American Pet Products Association (APPA) 2021-2022 National Pet Owners Survey\")\n\nplot"},{"path":"pictogram.html","id":"customise","chapter":"2 Pictogram","heading":"2.5 Customise","text":"Finally, use theme() really customise look. adjusted spacing items legend legend.spacing.y, requires guides set byrow work.\nFigure 2.1: Number US households (millions) 8 common pet types.\n","code":"\nplot +\n  theme(axis.ticks = element_blank(),\n        plot.background = element_rect(fill = \"black\", color = \"black\"),\n        plot.margin = unit(c(.5, .5, .5, .0), 'cm'),\n        plot.title = element_text(family = \"Market Deco\", hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5),\n        plot.caption.position = \"plot\",\n        panel.background = element_rect(fill = \"black\", color = \"black\"),\n        legend.background = element_blank(),\n        legend.title = element_blank(),\n        legend.key = element_blank(),\n        legend.spacing.y = unit(.25, 'cm'),\n        text = element_text(family = \"Avenir\", color = \"white\")) +\n  ## important additional element\n  guides(color = guide_legend(byrow = TRUE),\n         label = guide_legend(byrow = TRUE))"},{"path":"pictogram.html","id":"save","chapter":"2 Pictogram","heading":"2.6 Save","text":"However, trouble saving plot using ggsave(). icons end garbled.turns ggsave() uses ragg default (HT Steve Haroz), playing well fontawesome icons, set device back png.","code":"\nggsave(\"images/day2_garbled.png\", width = 8, height = 5)\nknitr::include_graphics(\"images/day2_garbled.png\")\nggsave(\"images/day2.png\", width = 8, height = 5, device = png)\nknitr::include_graphics(\"images/day2.png\")"},{"path":"historical.html","id":"historical","chapter":"3 Historical","heading":"3 Historical","text":"","code":"\nlibrary(tidyverse)"},{"path":"historical.html","id":"population-data","chapter":"3 Historical","heading":"3.1 Population Data","text":"got dataset class assignment cites World Data Burden Disease, still sure exactly historical population data came , can get file .column names need cleaning (prefer work column names lowercase spaces), need data.","code":"\npop <- read_csv(\"data/disease-burden-vs-health-expenditure-per-capita.csv\",\n                show_col_types = FALSE)\n\nspec(pop)## cols(\n##   Entity = col_character(),\n##   Code = col_character(),\n##   Year = col_double(),\n##   `DALYs (Disability-Adjusted Life Years) - All causes - Sex: Both - Age: Age-standardized (Rate)` = col_double(),\n##   `Health expenditure per capita (current US$)` = col_double(),\n##   `Population (historical estimates)` = col_double(),\n##   Continent = col_character()\n## )\npop <- read_csv(\"data/disease-burden-vs-health-expenditure-per-capita.csv\",\n                col_names = c(\"region\", \"code\", \"year\", \"population\", \"continent\"),\n                skip = 1,\n                col_types = \"cci--dc\")\n\nhead(pop)"},{"path":"historical.html","id":"select-relevant-data","chapter":"3 Historical","heading":"3.2 Select relevant data","text":"just want plot population 6 major world regions, filter make quick line plot see got.","code":"\nworld_regions <- pop %>%\n  select(-code, -continent) %>%\n  filter(region %in% c(\"Africa\", \"Asia\", \"Europe\", \"Oceania\", \"North America\", \"South America\"))\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line()"},{"path":"historical.html","id":"transform-y-axis","chapter":"3 Historical","heading":"3.3 Transform y-axis","text":"population growth pretty exponential end, log transformation y-axis might help.","code":"\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  scale_y_log10()"},{"path":"historical.html","id":"region-order","chapter":"3 Historical","heading":"3.4 Region order","text":"make sense legend order lines, turn column factor ordered population latest year.also add point year data.","code":"\nregion_order <- world_regions %>%\n  filter(year == max(year)) %>%\n  arrange(desc(population)) %>%\n  pull(region)\n\nworld_regions <- world_regions %>%\n  mutate(region = factor(region, region_order))\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point() +\n  scale_y_log10()"},{"path":"historical.html","id":"variable-x-axis","chapter":"3 Historical","heading":"3.5 Variable x-axis","text":"data collection even . years go every 1000 -10000 0, every 100 0 1700, every 10 1700 1800, every year 1800 2021.tried x-axis transformations, straightforward x-axis crosses 0, transformations handle. one silliest.add new column specifies time period . replace text later, probably easiest give alphabetic labels now.","code":"\nunique(world_regions$year) %>% sort() %>% `[`(1:50)##  [1] -10000  -9000  -8000  -7000  -6000  -5000  -4000  -3000  -2000  -1000\n## [11]      0    100    200    300    400    500    600    700    800    900\n## [21]   1000   1100   1200   1300   1400   1500   1600   1700   1710   1720\n## [31]   1730   1740   1750   1760   1770   1780   1790   1800   1801   1802\n## [41]   1803   1804   1805   1806   1807   1808   1809   1810   1811   1812\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point() +\n  scale_y_log10() +\n  scale_x_continuous(trans = \"reciprocal\")## Warning: Transformation introduced infinite values in continuous x-axis\n\n## Warning: Transformation introduced infinite values in continuous x-axis\nworld_regions <- world_regions %>%\n  mutate(time_period = case_when(\n      year < 0 ~ \"A\",\n      year < 1700 ~ \"B\",\n      year < 1800 ~ \"C\",\n      year < 2022 ~ \"D\"))\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point() +\n  scale_y_log10() +\n  facet_grid(~time_period, scales = \"free_x\")"},{"path":"historical.html","id":"clean-up","chapter":"3 Historical","heading":"3.6 Clean Up","text":"Now getting somewhere, still need clean lot. going remove panel spacing expansion plots touch . also customise breaks labels y-axis make easier understand, customise colours (love rainbow).However, borders time period meet. can fix duplicating border years assigning previous time period.also fix facet labels. function as_labeller() lets translate data labels custom labels facets. set custom colours custom x-axis breaks labels. moved legend inside plot give plot horizontal room.","code":"\n# custom colours\nrainbow <- c(\"#983E82\",\"#E2A458\",\"#F5DC70\",\"#59935B\",\"#467AAC\",\"#61589C\")\n\nggplot(world_regions, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point() +\n  facet_grid(~time_period, scales = \"free_x\") +\n  scale_x_continuous(name = NULL,\n                     expand = expansion(0)) +\n  scale_y_log10(name = \"Population (log scale)\",\n                breaks = 10^(5:10),\n                labels = c(\"100K\", \"1M\", \"10M\", \"100M\", \"1B\", \"10B\"),\n                limit = c(1e5, 1e10)) +\n  scale_color_manual(name = NULL,\n                     values = rainbow) +\n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_text(angle = 90, hjust = 1),\n        panel.spacing.x = unit(0, \"cm\"))\nborders <- world_regions %>%\n  group_by(time_period) %>%\n  filter(year == min(year)) %>%\n  ungroup() %>%\n  filter(time_period != \"A\") %>%\n  mutate(time_period = recode(time_period, B = \"A\", C = \"B\", D = \"C\"))\n\nworld_regions2 <- bind_rows(world_regions, borders)\n# custom facet labels\ntp_labels <- c(\n  A = \"10000BC to 0\",\n  B = \"0 to 1700\",\n  C = \"1700 to 1800\",\n  D = \"1800 to 2021\"\n)\n\n# custom x-axis breaks and labels\nx_breaks <- c(seq(-10000, -2000, 2000),\n              seq(0, 1600, 200),\n              seq(1700, 1790, 10),\n              seq(1800, 2021, 20))\n\nx_labels <- c(paste(seq(10000, 2000, -2000), \"BCE\"),\n              seq(0, 1700, 200),\n              seq(1700, 1790, 10),\n              seq(1800, 2021, 20))\n\nggplot(world_regions2, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point() +\n  facet_grid(~time_period, \n             scales = \"free_x\", \n             labeller = as_labeller(tp_labels)) +\n  scale_x_continuous(name = NULL,\n                   breaks = x_breaks,\n                   labels = x_labels,\n                   expand = expansion(0)) +\n  scale_y_log10(name = \"Population (log scale)\",\n                breaks = 10^(5:10),\n                labels = c(\"100K\", \"1M\", \"10M\", \"100M\", \"1B\", \"10B\"),\n                limit = c(1e5, 1e10)) +\n  scale_color_manual(name = NULL,\n                     values = rainbow) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        panel.spacing.x = unit(0, \"cm\"),\n        legend.background = element_rect(fill = \"transparent\"),\n        legend.position = c(.1, .75) )"},{"path":"historical.html","id":"change-time-periods","chapter":"3 Historical","heading":"3.7 Change time periods","text":"changed mind 1700 1800. plot gives much prominence. combine 1800+. looked weird specify \"BCE\" years 0, added \"CE\" (Common Era) years 0 adjusted angle number labels make easier read.","code":"\n# recode time period to 3 periods (merge C and D)\nworld_regions3 <- world_regions2 %>%\n  mutate(time_period = recode(time_period, A = \"A\", B = \"B\", C = \"C\", D = \"C\"))\n\n# remake facet labels\ntp_labels <- c(\n  A = \"10000 BCE to 0\",\n  B = \"0 to 1700 CE\",\n  C = \"1700 CE to 2021 CE\"\n)\n\n# remake x-axis breaks and labels\nx_breaks <- c(seq(-10000, -2000, 2000),\n              seq(0, 1500, 300),\n              seq(1700, 2021, 50))\n\nx_labels <- c(paste(seq(10000, 2000, -2000), \"BCE\"),\n              paste(seq(0, 1500, 300), \"CE\"),\n              paste(seq(1700, 2021, 50), \"CE\"))\nggplot(world_regions3, aes(x = year, y = population, color = region)) +\n  geom_line() +\n  geom_point(size = 1, alpha = 0.5) +\n  facet_grid(~time_period, \n             scales = \"free_x\", \n             labeller = as_labeller(tp_labels)) +\n  scale_x_continuous(name = NULL,\n                   breaks = x_breaks,\n                   labels = x_labels,\n                   expand = expansion(0)) +\n  scale_y_log10(name = \"Population (log scale)\",\n                breaks = 10^(5:10),\n                labels = c(\"100K\", \"1M\", \"10M\", \"100M\", \"1B\", \"10B\"),\n                limit = c(1e5, 1e10)) +\n  scale_color_manual(name = NULL,\n                     values = rainbow) +\n  labs(title = \"World Population (Historical Estimates)\",\n       caption = \"Data from Our World in Data | Plot by @lisadebruine\") +\n  theme_bw() +\n  theme(text = element_text(family = \"Avenir\"),\n        axis.text.x = element_text(angle = 30, hjust = 1),\n        panel.spacing.x = unit(0, \"cm\"),\n        legend.background = element_rect(fill = \"transparent\"),\n        legend.position = c(.1, .75),\n        panel.grid.minor = element_blank(),\n        plot.title = element_text(family = \"Market Deco\"))"},{"path":"flora.html","id":"flora","chapter":"4 Flora","heading":"4 Flora","text":"going little -piste today. inspired stock infographics, wondered make something similar code. probably can ggplot annotations, wanted try something different.\nFigure 4.1: Flower infographics vectorstock.com\n","code":"\nlibrary(tidyverse) # always useful\nlibrary(rsvg) # to convert SVG to other formats## Warning: package 'rsvg' was built\n## under R version 4.1.2## Linking to librsvg 2.48.4\nlibrary(glue) # for editing SVG text## \n## Attaching package: 'glue'## The following object is masked _by_ '.GlobalEnv':\n## \n##     backtick\nknitr::include_graphics(\"images/flower_infographics.png\")"},{"path":"flora.html","id":"svg","chapter":"4 Flora","heading":"4.1 SVG","text":"experience making SVGs (scalable vector graphics), always look things . W3Schools favourite source quick tutorials web stuff. used ton make chart.developing code, needed quick look images lot, figure efficient way view SVGs, wrote function converts svg text PNG tempfile displays Rmd, running code interactively.outputs SVG html knitting. images created code chunk looks like :","code":"\nviewsvg <- function(svg, width = 5, height = 5, dpi = 150) {\n  if (interactive() &&\n      !isTRUE(getOption(\"knitr.in.progress\"))) {\n    imgpath <- tempfile(fileext = \".png\")\n    rsvg::rsvg_png(svg = charToRaw(svg),\n                   file = imgpath,\n                   width = width*dpi, height = height*dpi)\n    knitr::include_graphics(imgpath)\n  } else {\n    cat(svg)\n  }\n}```{r, results='asis', echo = FALSE}\nviewsvg(svg)```"},{"path":"flora.html","id":"flower-petals","chapter":"4 Flora","heading":"4.2 Flower Petals","text":"First, need function figure coordinates regular polygons.Now, make n circles radius r petal_dist away center flower.","code":"\npoly_coords <- function(n = 6, r = 1, cx = 0, cy = 0, rot = 0, digits = 2) {\n  x = map_dbl(0:(n-1), ~{ cx + r * cos(2 * pi * .x / n + rot) })\n  y = map_dbl(0:(n-1), ~{ cy + r * sin(2 * pi * .x / n + rot) })\n  \n  list(\n    x = round(x, digits),\n    y = round(y, digits)\n  )\n}\n\npoly_coords(n = 6)## $x\n## [1]  1.0  0.5 -0.5 -1.0 -0.5  0.5\n## \n## $y\n## [1]  0.00  0.87  0.87  0.00 -0.87\n## [6] -0.87\nn <- 6\nr <- 200\npetal_dist <- 300\ncx <- 500\ncy <- 500\n\ncoords <- poly_coords(n, petal_dist, cx, cy)\npetals <- glue('    <circle cx=\"{coords$x}\" cy=\"{coords$y}\" r=\"{r}\" fill=\"{rainbow(n)}\" />') %>%\n  paste(collapse = \"\\n\")\n\nsvg <- paste(\"<svg viewBox = '0 0 {2*cx} {2*cy}'>\",\n        petals, \n      \"<\/svg>\",\n      sep = \"\\n\") %>%\n  glue()"},{"path":"flora.html","id":"rotate","chapter":"4 Flora","heading":"4.3 Rotate","text":"Rotate red 12:00.","code":"\nrot <- -pi/2\n\ncoords <- poly_coords(n, petal_dist, cx, cy, rot)\npetals <- glue('    <circle cx=\"{coords$x}\" cy=\"{coords$y}\" r=\"{r}\" fill=\"{rainbow(n)}\" />') %>%\n  paste(collapse = \"\\n\")\n\nsvg <- paste(\"<svg viewBox = '0 0 {2*cx} {2*cy}'>\",\n        petals, \n      \"<\/svg>\",\n      sep = \"\\n\") %>%\n  glue()"},{"path":"flora.html","id":"fix-the-overlap","chapter":"4 Flora","heading":"4.4 Fix the Overlap","text":"overlap, last petal top first, need replot left half . took forever figure plot left half circle <path> :(Now want add center hexagon just touches petal.","code":"\ncoords <- poly_coords(n, petal_dist, cx, cy, rot)\npetals <- glue('    <circle cx=\"{coords$x}\" cy=\"{coords$y}\" r=\"{r}\" fill=\"{rainbow(n)}\" />') %>%\n  paste(collapse = \"\\n\")\n\nx1 <- coords$x[[1]]\ny1 <- coords$y[[1]]\npetal_fix <- glue('    <g transform=\"rotate({rot*180/pi}, {x1}, {y1})\">\n       <path d=\"M {x1-r} {y1}\n       A {r} {r} 0 0 1 {x1+r} {y1}\n       L {x1-r} {y1}\n       Z\" \n       fill=\"{rainbow(n)[[1]]}\" /><\/g>')\n\nsvg <- paste(\"<svg viewBox = '0 0 {2*cx} {2*cy}'>\",\n        petals, petal_fix, \n      \"<\/svg>\",\n      sep = \"\\n\") %>%\n  glue()\ncenter <- poly_coords(n, petal_dist-r, cx, cy, rot) %>%\n  glue(\"{cc$x},{cc$y}\", cc = .) %>%\n  paste(collapse = \" \") %>%\n  glue('<polygon points=\"{pts}\" fill=\"grey\" />', pts = .)\n\nsvg <- paste(\"<svg viewBox = '0 0 {2*cx} {2*cy}'>\", \n      center,\n      petals, petal_fix,\n      \"<\/svg>\",\n      sep = \"\\n\") %>%\n  glue()"},{"path":"flora.html","id":"petals","chapter":"4 Flora","heading":"4.5 7 Petals","text":"","code":"\nn          <- 7\nrot        <- 8.5*pi/7\npetal_dist <- 400\nr          <- 200\ncx         <- 1.1 * (petal_dist + r)\ncy         <- cx\n\ncenter <- poly_coords(n, petal_dist-r, cx, cy, rot) %>%\n  glue(\"{cc$x},{cc$y}\", cc = .) %>%\n  paste(collapse = \" \") %>%\n  glue('<polygon points=\"{pts}\" fill=\"grey\" />', pts = .)\n\ncoords <- poly_coords(n, petal_dist, cx, cy, rot)\npetals <- glue('    <circle cx=\"{coords$x}\" cy=\"{coords$y}\" r=\"{r}\" fill=\"{rainbow(n)}\" />') %>%\n  paste(collapse = \"\\n\")\n\nx1 <- coords$x[[1]]\ny1 <- coords$y[[1]]\npetal_fix <- glue('    <g transform=\"rotate({rot*180/pi}, {x1}, {y1})\">\n       <path d=\"M {x1-r} {y1}\n       A {r} {r} 0 0 1 {x1+r} {y1}\n       L {x1-r} {y1}\n       Z\" \n       fill=\"{rainbow(n)[[1]]}\" /><\/g>')\n\n\ntext <- glue('    <text x=\"{coords$x}\" y=\"{coords$y+40}\">{LETTERS[1:n]}<\/text>\"') %>%\n  paste(collapse = \"\\n\")\n\nsvg_style <- '<style type=\"text/css\">\nsvg { \n  font-family: sans-serif;\n  font-size: 80px; \n  text-anchor: middle; \n  fill: white;\n}\n<\/style>'\n\nsvg <- paste(\"<svg viewBox = '0 0 {{2*cx}} {{2*cy}}'>\", \n             svg_style,\n             center,\n             '<text x=\"{{cx}}\" y=\"{{cy-20}}\">All of the<\/text>',\n             '<text x=\"{{cx}}\" y=\"{{cy+90}}\">Things<\/text>',\n             petals, petal_fix, text, \"<\/svg>\",\n             sep = \"\\n\") %>%\n  glue(.open = \"{{\", .close = \"}}\")"},{"path":"flora.html","id":"make-a-function","chapter":"4 Flora","heading":"4.6 Make a Function","text":"Now just need wrap function can change things need. also added transparency petals, necessitated making two halves first petal separately, otherwise overlap fix increases opacity half petal transparency.Test defaults.","code":"\npoly_coords <- function(n = 6, r = 1, cx = 0, cy = 0, rot = 0, digits = 2) {\n  x = map_dbl(0:(n-1), ~{ cx + r * cos(2 * pi * .x / n + rot) })\n  y = map_dbl(0:(n-1), ~{ cy + r * sin(2 * pi * .x / n + rot) })\n  \n  list(\n    x = round(x, digits),\n    y = round(y, digits)\n  )\n}\n\nflower <- function(n = 6, petal_dist = 500, r = 250, rot = -pi/2,\n                   petal_text = LETTERS[1:n],\n                   center_text = c(\"All of the\", \"Things\"),\n                   petal_text_size = r/2,\n                   center_text_size = petal_dist/6,\n                   center_text_offsets = c(-0.2, +0.9) * center_text_size,\n                   petal_colors = rainbow(n),\n                   petal_alpha = 1.0,\n                   center_color = \"#808080\",\n                   petal_text_color = \"white\",\n                   center_text_color = petal_text_color) {\n  \n  # calculate centre\n  cx <- 1.1 * (petal_dist + r)\n  cy <- cx\n  \n  # make centre polygon\n  center <- poly_coords(n, petal_dist-r, cx, cy, rot) %>%\n    glue(\"{cc$x},{cc$y}\", cc = .) %>%\n    paste(collapse = \" \") %>%\n    glue('<polygon points=\"{pts}\" fill=\"{center_color}\" />', pts = .)\n  \n  # make center texts\n  center_texts <- glue('    <text x=\"{cx}\" y=\"{cy+center_text_offsets}\" fill=\"{center_text_color}\" font-size=\"{center_text_size}px\">{center_text}<\/text>') %>%\n    paste(collapse = \"\\n\")\n  \n  # make petals\n  coords <- poly_coords(n, petal_dist, cx, cy, rot)\n  petals <- glue('    <circle cx=\"{coords$x}\" cy=\"{coords$y}\" r=\"{r}\" fill=\"{rainbow(n)}\" />') %>%\n    paste(collapse = \"\\n\")\n  \n  x1 <- coords$x[[1]]\n  y1 <- coords$y[[1]]\n  petal_fix1 <- glue('    <g transform=\"rotate({(rot+pi)*180/pi}, {x1}, {y1})\">\n         <path d=\"M {x1-r} {y1}\n         A {r} {r} 0 0 1 {x1+r} {y1}\n         L {x1-r} {y1}\n         Z\" \n         fill=\"{rainbow(n)[[1]]}\" fill-opacity=\"{petal_alpha}\" /><\/g>')\n  \n  petal_fix2 <- glue('    <g transform=\"rotate({rot*180/pi}, {x1}, {y1})\">\n         <path d=\"M {x1-r} {y1}\n         A {r} {r} 0 0 1 {x1+r} {y1}\n         L {x1-r} {y1}\n         Z\" \n         fill=\"{rainbow(n)[[1]]}\" fill-opacity=\"{petal_alpha}\" /><\/g>')\n  \n  # make petal text\n  petals_text <- glue('    <text x=\"{coords$x}\" y=\"{coords$y+petal_text_size/2}\">{petal_text}<\/text>\"') %>%\n    paste(collapse = \"\\n\")\n  \n  \n  # general styles\n  svg_style <- '<style type=\"text/css\">\n  svg { \n    font-family: sans-serif;\n    font-size: {{petal_text_size}}px; \n    text-anchor: middle; \n    fill: {{petal_text_color}};\n  }\n<\/style>'\n  \n  svg <- paste(\"<svg viewBox = '0 0 {{2*cx}} {{2*cy}}'>\", \n               svg_style,\n               center, center_texts,\n               petal_fix1, petals, petal_fix2, petals_text, \n               \"<\/svg>\",\n               sep = \"\\n\") %>%\n    glue(.open = \"{{\", .close = \"}}\")\n  \n  svg\n}\nsvg <- flower()"},{"path":"flora.html","id":"original-pride-flag","chapter":"4 Flora","heading":"4.7 Original Pride Flag","text":"Test customisability making chart meaning 8 colours original pride flag.","code":"\nsvg <- flower(n = 8, petal_dist = 400, r = 200,\n              petal_colors = c(\"#FF66B1\", \"#FF0000\", \"#FF8F1A\", \"#FEFF3A\",\n                               \"#008F1D\", \"#00C0C0\", \"#420095\", \"#8F008B\"),\n              petal_alpha = 0.8,\n              petal_text = c(\"Sex\", \"Life\", \"Healing\", \"Sunlight\",\n                             \"Nature\", \"Magic/Art\", \"Serenity\", \"Spirit\"),\n              center_text = c(\"Original\", \"Pride\", \"Flag\"),\n              center_text_size = 80,\n              center_text_offsets = c(-60, 40, 140),\n              petal_text_color = \"#222222\",\n              petal_text_size = 70,\n              center_color = \"black\",\n              center_text_color = \"white\"\n)"},{"path":"flora.html","id":"save-as-svg-or-png","chapter":"4 Flora","heading":"4.8 Save as SVG or PNG","text":"can display SVG directly website setting results='asis' code chunk header. display full size unless use another method constrain image size. set css style svg { width: 100%; }.can write svg file, use svgr convert image.","code":"\ncat(svg)\nwrite(svg, \"images/day4.svg\")\nrsvg::rsvg_png(svg = charToRaw(svg), \n               file = \"images/day4.png\", \n               width = 8*150, height = 8*150)\n\nknitr::include_graphics(\"images/day4.png\")"},{"path":"slope.html","id":"slope","chapter":"5 Slope","heading":"5 Slope","text":"","code":""},{"path":"owid.html","id":"owid","chapter":"6 OWID","heading":"6 OWID","text":"","code":""},{"path":"physical.html","id":"physical","chapter":"7 Physical","heading":"7 Physical","text":"","code":""},{"path":"mountains.html","id":"mountains","chapter":"8 Mountains","heading":"8 Mountains","text":"","code":""},{"path":"statistics.html","id":"statistics","chapter":"9 Statistics","heading":"9 Statistics","text":"","code":""},{"path":"experimental.html","id":"experimental","chapter":"10 Experimental","heading":"10 Experimental","text":"","code":""},{"path":"circular.html","id":"circular","chapter":"11 Circular","heading":"11 Circular","text":"","code":""},{"path":"the-economist.html","id":"the-economist","chapter":"12 The Economist","heading":"12 The Economist","text":"","code":""},{"path":"correlation.html","id":"correlation","chapter":"13 Correlation","heading":"13 Correlation","text":"","code":""},{"path":"dimensional.html","id":"dimensional","chapter":"14 3-dimensional","heading":"14 3-dimensional","text":"","code":""},{"path":"multivariate.html","id":"multivariate","chapter":"15 Multivariate","heading":"15 Multivariate","text":"","code":""},{"path":"environment.html","id":"environment","chapter":"16 Environment","heading":"16 Environment","text":"","code":""},{"path":"connections.html","id":"connections","chapter":"17 Connections","heading":"17 Connections","text":"","code":""},{"path":"oecd.html","id":"oecd","chapter":"18 OECD","heading":"18 OECD","text":"","code":""},{"path":"global-challenge.html","id":"global-challenge","chapter":"19 Global Challenge","heading":"19 Global Challenge","text":"","code":""},{"path":"new-tool.html","id":"new-tool","chapter":"20 New Tool","heading":"20 New Tool","text":"","code":""},{"path":"downupwards.html","id":"downupwards","chapter":"21 Down/Upwards","heading":"21 Down/Upwards","text":"","code":""},{"path":"animation.html","id":"animation","chapter":"22 Animation","heading":"22 Animation","text":"","code":""},{"path":"tiles.html","id":"tiles","chapter":"23 Tiles","heading":"23 Tiles","text":"","code":""},{"path":"financial-times.html","id":"financial-times","chapter":"24 Financial Times","heading":"24 Financial Times","text":"","code":""},{"path":"trend.html","id":"trend","chapter":"25 Trend","heading":"25 Trend","text":"","code":""},{"path":"interactive.html","id":"interactive","chapter":"26 Interactive","heading":"26 Interactive","text":"","code":""},{"path":"future.html","id":"future","chapter":"27 Future","heading":"27 Future","text":"","code":""},{"path":"deviations.html","id":"deviations","chapter":"28 Deviations","heading":"28 Deviations","text":"","code":""},{"path":"storytelling.html","id":"storytelling","chapter":"29 Storytelling","heading":"29 Storytelling","text":"","code":""},{"path":"un-population.html","id":"un-population","chapter":"30 UN Population","heading":"30 UN Population","text":"","code":""},{"path":"colours.html","id":"colours","chapter":"A Colours","heading":"A Colours","text":"Hover colour see R name.\nblack\n\ngray1\n\ngray2\n\ngray3\n\ngray4\n\ngray5\n\ngray6\n\ngray7\n\ngray8\n\ngray9\n\ngray10\n\ngray11\n\ngray12\n\ngray13\n\ngray14\n\ngray15\n\ngray16\n\ngray17\n\ngray18\n\ngray19\n\ngray20\n\ngray21\n\ngray22\n\ngray23\n\ngray24\n\ngray25\n\ngray26\n\ngray27\n\ngray28\n\ngray29\n\ngray30\n\ngray31\n\ngray32\n\ngray33\n\ngray34\n\ngray35\n\ngray36\n\ngray37\n\ngray38\n\ngray39\n\ngray40\n\ndimgray\n\ngray42\n\ngray43\n\ngray44\n\ngray45\n\ngray46\n\ngray47\n\ngray48\n\ngray49\n\ngray50\n\ngray51\n\ngray52\n\ngray53\n\ngray54\n\ngray55\n\ngray56\n\ngray57\n\ngray58\n\ngray59\n\ngray60\n\ngray61\n\ngray62\n\ngray63\n\ngray64\n\ngray65\n\ndarkgray\n\ngray66\n\ngray67\n\ngray68\n\ngray69\n\ngray70\n\ngray71\n\ngray72\n\ngray73\n\ngray74\n\ngray\n\ngray75\n\ngray76\n\ngray77\n\ngray78\n\ngray79\n\ngray80\n\ngray81\n\ngray82\n\ngray83\n\nlightgray\n\ngray84\n\ngray85\n\ngainsboro\n\ngray86\n\ngray87\n\ngray88\n\ngray89\n\ngray90\n\ngray91\n\ngray92\n\ngray93\n\ngray94\n\ngray95\n\ngray96\n\ngray97\n\ngray98\n\ngray99\n\nwhite\n\nsnow4\n\nsnow3\n\nsnow2\n\nsnow\n\nrosybrown4\n\nrosybrown\n\nrosybrown3\n\nrosybrown2\n\nrosybrown1\n\nlightcoral\n\nindianred\n\nindianred4\n\nindianred2\n\nindianred1\n\nindianred3\n\nbrown4\n\nbrown\n\nbrown3\n\nbrown2\n\nbrown1\n\nfirebrick4\n\nfirebrick\n\nfirebrick3\n\nfirebrick1\n\nfirebrick2\n\ndarkred\n\nred3\n\nred2\n\nred\n\nmistyrose3\n\nmistyrose4\n\nmistyrose2\n\nmistyrose\n\nsalmon\n\ntomato3\n\ncoral4\n\ncoral3\n\ncoral2\n\ncoral1\n\ntomato2\n\ntomato\n\ntomato4\n\ndarksalmon\n\nsalmon4\n\nsalmon3\n\nsalmon2\n\nsalmon1\n\ncoral\n\norangered4\n\norangered3\n\norangered2\n\nlightsalmon3\n\nlightsalmon2\n\nlightsalmon\n\nlightsalmon4\n\nsienna\n\nsienna3\n\nsienna2\n\nsienna1\n\nsienna4\n\norangered\n\nseashell4\n\nseashell3\n\nseashell2\n\nseashell\n\nchocolate4\n\nchocolate3\n\nchocolate\n\nchocolate2\n\nchocolate1\n\nlinen\n\npeachpuff4\n\npeachpuff3\n\npeachpuff2\n\npeachpuff\n\nsandybrown\n\ntan4\n\nperu\n\ntan2\n\ntan1\n\ndarkorange4\n\ndarkorange3\n\ndarkorange2\n\ndarkorange1\n\nantiquewhite3\n\nantiquewhite2\n\nantiquewhite1\n\nbisque4\n\nbisque3\n\nbisque2\n\nbisque\n\nburlywood4\n\nburlywood3\n\nburlywood\n\nburlywood2\n\nburlywood1\n\ndarkorange\n\nantiquewhite4\n\nantiquewhite\n\npapayawhip\n\nblanchedalmond\n\nnavajowhite4\n\nnavajowhite3\n\nnavajowhite2\n\nnavajowhite\n\ntan\n\nfloralwhite\n\noldlace\n\nwheat4\n\nwheat3\n\nwheat2\n\nwheat\n\nwheat1\n\nmoccasin\n\norange4\n\norange3\n\norange2\n\norange\n\ngoldenrod\n\ngoldenrod1\n\ngoldenrod4\n\ngoldenrod3\n\ngoldenrod2\n\ndarkgoldenrod4\n\ndarkgoldenrod\n\ndarkgoldenrod3\n\ndarkgoldenrod2\n\ndarkgoldenrod1\n\ncornsilk\n\ncornsilk4\n\ncornsilk3\n\ncornsilk2\n\nlightgoldenrod4\n\nlightgoldenrod3\n\nlightgoldenrod\n\nlightgoldenrod2\n\nlightgoldenrod1\n\ngold4\n\ngold3\n\ngold2\n\ngold\n\nlemonchiffon4\n\nlemonchiffon3\n\nlemonchiffon2\n\nlemonchiffon\n\npalegoldenrod\n\nkhaki\n\ndarkkhaki\n\nkhaki4\n\nkhaki3\n\nkhaki2\n\nkhaki1\n\nivory4\n\nivory3\n\nivory2\n\nivory\n\nbeige\n\nlightyellow4\n\nlightyellow3\n\nlightyellow2\n\nlightyellow\n\nlightgoldenrodyellow\n\nyellow4\n\nyellow3\n\nyellow2\n\nyellow\n\nolivedrab\n\nolivedrab4\n\nolivedrab3\n\nolivedrab2\n\nolivedrab1\n\ndarkolivegreen\n\ndarkolivegreen4\n\ndarkolivegreen3\n\ndarkolivegreen2\n\ndarkolivegreen1\n\ngreenyellow\n\nchartreuse4\n\nchartreuse3\n\nchartreuse2\n\nlawngreen\n\nchartreuse\n\nhoneydew4\n\nhoneydew3\n\nhoneydew2\n\nhoneydew\n\ndarkseagreen4\n\ndarkseagreen\n\ndarkseagreen3\n\ndarkseagreen2\n\ndarkseagreen1\n\nlightgreen\n\npalegreen\n\npalegreen4\n\npalegreen3\n\npalegreen1\n\nforestgreen\n\nlimegreen\n\ndarkgreen\n\ngreen4\n\ngreen3\n\ngreen2\n\ngreen\n\nmediumseagreen\n\nseagreen\n\nseagreen3\n\nseagreen2\n\nseagreen1\n\nmintcream\n\nspringgreen4\n\nspringgreen3\n\nspringgreen2\n\nspringgreen\n\naquamarine3\n\naquamarine2\n\naquamarine\n\nmediumspringgreen\n\naquamarine4\n\nturquoise\n\nmediumturquoise\n\nlightseagreen\n\nazure4\n\nazure3\n\nazure2\n\nazure\n\nlightcyan4\n\nlightcyan3\n\nlightcyan2\n\nlightcyan\n\npaleturquoise\n\npaleturquoise4\n\npaleturquoise3\n\npaleturquoise2\n\npaleturquoise1\n\ndarkslategray\n\ndarkslategray4\n\ndarkslategray3\n\ndarkslategray2\n\ndarkslategray1\n\ncyan4\n\ncyan3\n\ndarkturquoise\n\ncyan2\n\ncyan\n\ncadetblue4\n\ncadetblue\n\nturquoise4\n\nturquoise3\n\nturquoise2\n\nturquoise1\n\npowderblue\n\ncadetblue3\n\ncadetblue2\n\ncadetblue1\n\nlightblue4\n\nlightblue3\n\nlightblue\n\nlightblue2\n\nlightblue1\n\ndeepskyblue4\n\ndeepskyblue3\n\ndeepskyblue2\n\ndeepskyblue\n\nskyblue\n\nlightskyblue4\n\nlightskyblue3\n\nlightskyblue2\n\nlightskyblue1\n\nlightskyblue\n\nskyblue4\n\nskyblue3\n\nskyblue2\n\nskyblue1\n\naliceblue\n\nslategray\n\nlightslategray\n\nslategray3\n\nslategray2\n\nslategray1\n\nsteelblue4\n\nsteelblue\n\nsteelblue3\n\nsteelblue2\n\nsteelblue1\n\ndodgerblue4\n\ndodgerblue3\n\ndodgerblue2\n\ndodgerblue\n\nlightsteelblue4\n\nlightsteelblue3\n\nlightsteelblue\n\nlightsteelblue2\n\nlightsteelblue1\n\nslategray4\n\ncornflowerblue\n\nroyalblue\n\nroyalblue4\n\nroyalblue3\n\nroyalblue2\n\nroyalblue1\n\nghostwhite\n\nlavender\n\nmidnightblue\n\nnavy\n\nblue4\n\nblue3\n\nblue2\n\nblue\n\ndarkslateblue\n\nslateblue\n\nmediumslateblue\n\nlightslateblue\n\nslateblue1\n\nslateblue4\n\nslateblue3\n\nslateblue2\n\nmediumpurple4\n\nmediumpurple3\n\nmediumpurple\n\nmediumpurple2\n\nmediumpurple1\n\npurple4\n\npurple3\n\nblueviolet\n\npurple1\n\npurple2\n\npurple\n\ndarkorchid\n\ndarkorchid4\n\ndarkorchid3\n\ndarkorchid2\n\ndarkorchid1\n\ndarkviolet\n\nmediumorchid4\n\nmediumorchid3\n\nmediumorchid\n\nmediumorchid2\n\nmediumorchid1\n\nthistle4\n\nthistle3\n\nthistle\n\nthistle2\n\nthistle1\n\nplum4\n\nplum3\n\nplum2\n\nplum1\n\nplum\n\nviolet\n\ndarkmagenta\n\nmagenta3\n\nmagenta2\n\nmagenta\n\norchid4\n\norchid3\n\norchid\n\norchid2\n\norchid1\n\nmaroon4\n\nvioletred\n\nmaroon3\n\nmaroon2\n\nmaroon1\n\nmediumvioletred\n\ndeeppink3\n\ndeeppink2\n\ndeeppink\n\ndeeppink4\n\nhotpink2\n\nhotpink1\n\nhotpink4\n\nhotpink\n\nvioletred4\n\nvioletred3\n\nvioletred2\n\nvioletred1\n\nhotpink3\n\nlavenderblush4\n\nlavenderblush3\n\nlavenderblush2\n\nlavenderblush\n\nmaroon\n\npalevioletred4\n\npalevioletred3\n\npalevioletred\n\npalevioletred2\n\npalevioletred1\n\npink4\n\npink3\n\npink2\n\npink1\n\npink\n\nlightpink\n\nlightpink4\n\nlightpink3\n\nlightpink2\n\nlightpink1\n","code":""}]
